// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  name       String
  email      String   @unique
  password   String
  created_at DateTime @default(now())

  user_profile UserProfile?

  @@map("users")
}

model UserProfile {
  id          String     @id @default(uuid())
  store_image String
  store_name  String     @unique
  resources   Resources?
  analytics   Analytics?
  api_key     ApiKey?
  role        Role       @default(FREE)

  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id String @unique

  @@map("user_profile")
}

enum Role {
  MASTER
  FREE
  PREMIUM
}

model ApiKey {
  id              String   @id @default(uuid())
  key             String   @unique
  created_at      DateTime @default(now())
  expiration_date DateTime

  user_profile    UserProfile @relation(fields: [user_profile_id], references: [id], onDelete: Cascade)
  user_profile_id String      @unique

  @@map("api_key")
}

model Resources {
  id         String     @id @default(uuid())
  offers     Offer[]
  categories Category[]
  created_at DateTime   @default(now())
  analytics  Analytics?

  user_profile    UserProfile? @relation(fields: [user_profile_id], references: [id], onDelete: Cascade)
  user_profile_id String       @unique

  @@map("resources")
}

model Offer {
  id                 String              @id @default(uuid())
  image              String
  title              String
  old_price          String?
  price              String
  destination_link   String
  store_image        String?
  store_name         String
  description        String?
  expiration_date    String?
  created_at         DateTime            @default(now())
  is_on_showcase     Boolean             @default(false)
  is_featured        Boolean             @default(false)
  is_free_shipping   Boolean             @default(false)
  offer_clicks       OfferClicks[]
  destination_clicks DestinationClicks[]
  categories         CategoriesOnOffer[]

  resources    Resources @relation(fields: [resources_id], references: [id], onDelete: Cascade)
  resources_id String

  @@map("offers")
}

model Category {
  id             String        @id @default(uuid())
  name           String
  sub_categories SubCategory[]

  resources    Resources           @relation(fields: [resources_id], references: [id], onDelete: Cascade)
  resources_id String
  offers       CategoriesOnOffer[]

  @@map("categories")
}

model CategoriesOnOffer {
  offer       Offer    @relation(fields: [offer_id], references: [id])
  offer_id    String
  category    Category @relation(fields: [category_id], references: [id])
  category_id String
  resource_id String
  created_at  DateTime @default(now())

  @@id([offer_id, category_id])
}

model SubCategory {
  id   String @id @default(uuid())
  name String

  category    Category @relation(fields: [category_id], references: [id], onDelete: Cascade)
  category_id String

  @@map("sub_categories")
}

model Analytics {
  id                 String              @id @default(uuid())
  offer_clicks       OfferClicks[]
  destination_clicks DestinationClicks[]

  resources    Resources @relation(fields: [resources_id], references: [id], onDelete: Cascade)
  resources_id String    @unique

  user_profile    UserProfile @relation(fields: [user_profile_id], references: [id], onDelete: Cascade)
  user_profile_id String      @unique

  @@map("analytics")
}

model OfferClicks {
  id          String   @id @default(uuid())
  resource_id String
  created_at  DateTime @default(now())

  analytics    Analytics @relation(fields: [analytics_id], references: [id], onDelete: Cascade)
  analytics_id String

  offer    Offer  @relation(fields: [offer_id], references: [id], onDelete: Cascade)
  offer_id String

  @@map("offer_clicks")
}

model DestinationClicks {
  id               String   @id @default(uuid())
  resource_id      String
  destination_link String
  created_at       DateTime @default(now())

  analytics    Analytics @relation(fields: [analytics_id], references: [id], onDelete: Cascade)
  analytics_id String

  offer    Offer  @relation(fields: [offer_id], references: [id], onDelete: Cascade)
  offer_id String

  @@map("destination_clicks")
}
